{
  "contractName": "Whitelist",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_exchange",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "target",
          "type": "address"
        },
        {
          "name": "isApproved",
          "type": "bool"
        }
      ],
      "name": "updateWhitelistStatus",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "hash",
          "type": "bytes32"
        },
        {
          "name": "signerAddress",
          "type": "address"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "name": "isValid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "order",
          "type": "tuple"
        },
        {
          "name": "takerAssetFillAmount",
          "type": "uint256"
        },
        {
          "name": "salt",
          "type": "uint256"
        },
        {
          "name": "orderSignature",
          "type": "bytes"
        }
      ],
      "name": "fillOrderIfWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50604051602080620013ef83398101806040526200003391908101906200025f565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550307f0500000000000000000000000000000000000000000000000000000000000000604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526001019250505060405160208183030381529060405260039080519060200190620001929291906200019a565b5050620002ab565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001dd57805160ff19168380011785556200020e565b828001600101855582156200020e579182015b828111156200020d578251825591602001919060010190620001f0565b5b5090506200021d919062000221565b5090565b6200024691905b808211156200024257600081600090555060010162000228565b5090565b90565b60006200025782516200028b565b905092915050565b6000602082840312156200027257600080fd5b6000620002828482850162000249565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61113480620002bb6000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063141da8761461007d5780633af32abf146100a65780638da5cb5b146100e3578063936347021461010e578063c07732a31461014b578063f2fde38b14610174575b600080fd5b34801561008957600080fd5b506100a4600480360361009f9190810190610a9d565b61019d565b005b3480156100b257600080fd5b506100cd60048036036100c891908101906109cc565b6104bf565b6040516100da9190610e51565b60405180910390f35b3480156100ef57600080fd5b506100f86104df565b6040516101059190610e36565b60405180910390f35b34801561011a57600080fd5b5061013560048036036101309190810190610a31565b610504565b6040516101429190610e51565b60405180910390f35b34801561015757600080fd5b50610172600480360361016d91908101906109f5565b61053f565b005b34801561018057600080fd5b5061019b600480360361019691908101906109cc565b61062b565b005b600060603391503273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515610214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020b90610ecc565b60405180910390fd5b60016000876000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156102a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029d90610eac565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032b90610e6c565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b4be83d590507c0100000000000000000000000000000000000000000000000000000000028686856040516024016103a893929190610eec565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bfc8bfce85848460036040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016104859493929190610f31565b600060405180830381600087803b15801561049f57600080fd5b505af11580156104b3573d6000803e3d6000fd5b50505050505050505050565b60016020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16149050949350505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c790610e8c565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b390610e8c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151561073357806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60006107428235611067565b905092915050565b60006107568235611087565b905092915050565b600061076a8235611093565b905092915050565b60008083601f840112151561078657600080fd5b8235905067ffffffffffffffff81111561079f57600080fd5b6020830191508360018202830111156107b757600080fd5b9250929050565b600082601f83011215156107d157600080fd5b81356107e46107df82610fb1565b610f84565b9150808252602083016020830185838301111561080057600080fd5b61080b8382846110a7565b50505092915050565b600082601f830112151561082757600080fd5b813561083a61083582610fdd565b610f84565b9150808252602083016020830185838301111561085657600080fd5b6108618382846110a7565b50505092915050565b6000610180828403121561087d57600080fd5b610888610180610f84565b9050600061089884828501610736565b60008301525060206108ac84828501610736565b60208301525060406108c084828501610736565b60408301525060606108d484828501610736565b60608301525060806108e8848285016109b8565b60808301525060a06108fc848285016109b8565b60a08301525060c0610910848285016109b8565b60c08301525060e0610924848285016109b8565b60e083015250610100610939848285016109b8565b6101008301525061012061094f848285016109b8565b6101208301525061014082013567ffffffffffffffff81111561097157600080fd5b61097d848285016107be565b6101408301525061016082013567ffffffffffffffff81111561099f57600080fd5b6109ab848285016107be565b6101608301525092915050565b60006109c4823561109d565b905092915050565b6000602082840312156109de57600080fd5b60006109ec84828501610736565b91505092915050565b60008060408385031215610a0857600080fd5b6000610a1685828601610736565b9250506020610a278582860161074a565b9150509250929050565b60008060008060608587031215610a4757600080fd5b6000610a558782880161075e565b9450506020610a6687828801610736565b935050604085013567ffffffffffffffff811115610a8357600080fd5b610a8f87828801610772565b925092505092959194509250565b60008060008060808587031215610ab357600080fd5b600085013567ffffffffffffffff811115610acd57600080fd5b610ad98782880161086a565b9450506020610aea878288016109b8565b9350506040610afb878288016109b8565b925050606085013567ffffffffffffffff811115610b1857600080fd5b610b2487828801610814565b91505092959194509250565b610b3981611031565b82525050565b610b4881611051565b82525050565b6000610b5982611026565b808452610b6d8160208601602086016110b6565b610b76816110e9565b602085010191505092915050565b6000610b8f8261101b565b808452610ba38160208601602086016110b6565b610bac816110e9565b602085010191505092915050565b600081546001811660008114610bd75760018114610bf757610c38565b607f600283041680865260ff198316602087015260408601935050610c38565b60028204808652602086019550610c0d85611009565b60005b82811015610c2f57815481890152600182019150602081019050610c10565b80880195505050505b505092915050565b6000601582527f54414b45525f4e4f545f57484954454c495354454400000000000000000000006020830152604082019050919050565b6000601382527f4f4e4c595f434f4e54524143545f4f574e4552000000000000000000000000006020830152604082019050919050565b6000601582527f4d414b45525f4e4f545f57484954454c495354454400000000000000000000006020830152604082019050919050565b6000600e82527f494e56414c49445f53454e4445520000000000000000000000000000000000006020830152604082019050919050565b600061018083016000830151610d356000860182610b30565b506020830151610d486020860182610b30565b506040830151610d5b6040860182610b30565b506060830151610d6e6060860182610b30565b506080830151610d816080860182610e27565b5060a0830151610d9460a0860182610e27565b5060c0830151610da760c0860182610e27565b5060e0830151610dba60e0860182610e27565b50610100830151610dcf610100860182610e27565b50610120830151610de4610120860182610e27565b50610140830151848203610140860152610dfe8282610b84565b915050610160830151848203610160860152610e1a8282610b84565b9150508091505092915050565b610e308161105d565b82525050565b6000602082019050610e4b6000830184610b30565b92915050565b6000602082019050610e666000830184610b3f565b92915050565b60006020820190508181036000830152610e8581610c40565b9050919050565b60006020820190508181036000830152610ea581610c77565b9050919050565b60006020820190508181036000830152610ec581610cae565b9050919050565b60006020820190508181036000830152610ee581610ce5565b9050919050565b60006060820190508181036000830152610f068186610d1c565b9050610f156020830185610e27565b8181036040830152610f278184610b4e565b9050949350505050565b6000608082019050610f466000830187610e27565b610f536020830186610b30565b8181036040830152610f658185610b4e565b90508181036060830152610f798184610bba565b905095945050505050565b6000604051905081810181811067ffffffffffffffff82111715610fa757600080fd5b8060405250919050565b600067ffffffffffffffff821115610fc857600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115610ff457600080fd5b601f19601f8301169050602081019050919050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156110d45780820151818401526020810190506110b9565b838111156110e3576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820bb3b9b6b37def0ffb026fc0eff7081d74f18f779f8bb0d723298c4af311842036c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063141da8761461007d5780633af32abf146100a65780638da5cb5b146100e3578063936347021461010e578063c07732a31461014b578063f2fde38b14610174575b600080fd5b34801561008957600080fd5b506100a4600480360361009f9190810190610a9d565b61019d565b005b3480156100b257600080fd5b506100cd60048036036100c891908101906109cc565b6104bf565b6040516100da9190610e51565b60405180910390f35b3480156100ef57600080fd5b506100f86104df565b6040516101059190610e36565b60405180910390f35b34801561011a57600080fd5b5061013560048036036101309190810190610a31565b610504565b6040516101429190610e51565b60405180910390f35b34801561015757600080fd5b50610172600480360361016d91908101906109f5565b61053f565b005b34801561018057600080fd5b5061019b600480360361019691908101906109cc565b61062b565b005b600060603391503273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515610214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020b90610ecc565b60405180910390fd5b60016000876000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156102a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029d90610eac565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032b90610e6c565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b4be83d590507c0100000000000000000000000000000000000000000000000000000000028686856040516024016103a893929190610eec565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bfc8bfce85848460036040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016104859493929190610f31565b600060405180830381600087803b15801561049f57600080fd5b505af11580156104b3573d6000803e3d6000fd5b50505050505050505050565b60016020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16149050949350505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c790610e8c565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b390610e8c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151561073357806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60006107428235611067565b905092915050565b60006107568235611087565b905092915050565b600061076a8235611093565b905092915050565b60008083601f840112151561078657600080fd5b8235905067ffffffffffffffff81111561079f57600080fd5b6020830191508360018202830111156107b757600080fd5b9250929050565b600082601f83011215156107d157600080fd5b81356107e46107df82610fb1565b610f84565b9150808252602083016020830185838301111561080057600080fd5b61080b8382846110a7565b50505092915050565b600082601f830112151561082757600080fd5b813561083a61083582610fdd565b610f84565b9150808252602083016020830185838301111561085657600080fd5b6108618382846110a7565b50505092915050565b6000610180828403121561087d57600080fd5b610888610180610f84565b9050600061089884828501610736565b60008301525060206108ac84828501610736565b60208301525060406108c084828501610736565b60408301525060606108d484828501610736565b60608301525060806108e8848285016109b8565b60808301525060a06108fc848285016109b8565b60a08301525060c0610910848285016109b8565b60c08301525060e0610924848285016109b8565b60e083015250610100610939848285016109b8565b6101008301525061012061094f848285016109b8565b6101208301525061014082013567ffffffffffffffff81111561097157600080fd5b61097d848285016107be565b6101408301525061016082013567ffffffffffffffff81111561099f57600080fd5b6109ab848285016107be565b6101608301525092915050565b60006109c4823561109d565b905092915050565b6000602082840312156109de57600080fd5b60006109ec84828501610736565b91505092915050565b60008060408385031215610a0857600080fd5b6000610a1685828601610736565b9250506020610a278582860161074a565b9150509250929050565b60008060008060608587031215610a4757600080fd5b6000610a558782880161075e565b9450506020610a6687828801610736565b935050604085013567ffffffffffffffff811115610a8357600080fd5b610a8f87828801610772565b925092505092959194509250565b60008060008060808587031215610ab357600080fd5b600085013567ffffffffffffffff811115610acd57600080fd5b610ad98782880161086a565b9450506020610aea878288016109b8565b9350506040610afb878288016109b8565b925050606085013567ffffffffffffffff811115610b1857600080fd5b610b2487828801610814565b91505092959194509250565b610b3981611031565b82525050565b610b4881611051565b82525050565b6000610b5982611026565b808452610b6d8160208601602086016110b6565b610b76816110e9565b602085010191505092915050565b6000610b8f8261101b565b808452610ba38160208601602086016110b6565b610bac816110e9565b602085010191505092915050565b600081546001811660008114610bd75760018114610bf757610c38565b607f600283041680865260ff198316602087015260408601935050610c38565b60028204808652602086019550610c0d85611009565b60005b82811015610c2f57815481890152600182019150602081019050610c10565b80880195505050505b505092915050565b6000601582527f54414b45525f4e4f545f57484954454c495354454400000000000000000000006020830152604082019050919050565b6000601382527f4f4e4c595f434f4e54524143545f4f574e4552000000000000000000000000006020830152604082019050919050565b6000601582527f4d414b45525f4e4f545f57484954454c495354454400000000000000000000006020830152604082019050919050565b6000600e82527f494e56414c49445f53454e4445520000000000000000000000000000000000006020830152604082019050919050565b600061018083016000830151610d356000860182610b30565b506020830151610d486020860182610b30565b506040830151610d5b6040860182610b30565b506060830151610d6e6060860182610b30565b506080830151610d816080860182610e27565b5060a0830151610d9460a0860182610e27565b5060c0830151610da760c0860182610e27565b5060e0830151610dba60e0860182610e27565b50610100830151610dcf610100860182610e27565b50610120830151610de4610120860182610e27565b50610140830151848203610140860152610dfe8282610b84565b915050610160830151848203610160860152610e1a8282610b84565b9150508091505092915050565b610e308161105d565b82525050565b6000602082019050610e4b6000830184610b30565b92915050565b6000602082019050610e666000830184610b3f565b92915050565b60006020820190508181036000830152610e8581610c40565b9050919050565b60006020820190508181036000830152610ea581610c77565b9050919050565b60006020820190508181036000830152610ec581610cae565b9050919050565b60006020820190508181036000830152610ee581610ce5565b9050919050565b60006060820190508181036000830152610f068186610d1c565b9050610f156020830185610e27565b8181036040830152610f278184610b4e565b9050949350505050565b6000608082019050610f466000830187610e27565b610f536020830186610b30565b8181036040830152610f658185610b4e565b90508181036060830152610f798184610bba565b905095945050505050565b6000604051905081810181811067ffffffffffffffff82111715610fa757600080fd5b8060405250919050565b600067ffffffffffffffff821115610fc857600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115610ff457600080fd5b601f19601f8301169050602081019050919050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156110d45780820151818401526020810190506110b9565b838111156110e3576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820bb3b9b6b37def0ffb026fc0eff7081d74f18f779f8bb0d723298c4af311842036c6578706572696d656e74616cf50037",
  "sourceMap": "794:3556:18:-;;;1181:188;8:9:-1;5:2;;;30:1;27;20:12;5:2;1181:188:18;;;;;;;;;;;;;;;;;;;;;;170:10:101;162:5;;:18;;;;;;;;;;;;;;;;;;1263:9:18;1242:8;;:31;;;;;;;;;;;;;;;;;;1330:4;1337:24;1305:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1305:57:18;;;1283:19;:79;;;;;;;;;;;;:::i;:::-;;1181:188;794:3556;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:122:-1:-;;83:39;114:6;108:13;83:39;;;74:48;;68:59;;;;;134:263;;249:2;237:9;228:7;224:23;220:32;217:2;;;265:1;262;255:12;217:2;300:1;317:64;373:7;364:6;353:9;349:22;317:64;;;307:74;;279:108;211:186;;;;;404:128;;484:42;477:5;473:54;462:65;;456:76;;;;794:3556:18;;;;;;;",
  "deployedSourceMap": "794:3556:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3144:1204;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3144:1204:18;;;;;;;;;;;;;;;;;;;882:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;882:46:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;91:20:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;91:20:101;;;;;;;;;;;;;;;;;;;;2217:278:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2217:278:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1563:176;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1563:176:18;;;;;;;;;;;;;;;;;;;333:167:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;333:167:101;;;;;;;;;;;;;;;;;;;3144:1204:18;3345:20;3970:17;3368:10;3345:33;;3553:9;3537:25;;:12;:25;;;3459:143;;;;;;;;;;;;;;;;;;;;;;;;3681:13;:33;3695:5;:18;;;3681:33;;;;;;;;;;;;;;;;;;;;;;;;;3660:101;;;;;;;;;;;;;;;;;;;;;;;;3840:13;:27;3854:12;3840:27;;;;;;;;;;;;;;;;;;;;;;;;;3819:95;;;;;;;;;;;;;;;;;;;;;;;;4026:8;;;;;;;;;;;:18;;;:27;;;;4067:5;4086:20;4120:14;3990:154;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3990:154:18;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;3990:154:18;3970:174;;4209:8;;;;;;;;;;;:27;;;4250:4;4268:12;4294:4;4312:19;4209:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4209:132:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4209:132:18;;;;3144:1204;;;;;;:::o;882:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;91:20:101:-;;;;;;;;;;;;;:::o;2217:278:18:-;2374:12;2479:9;2462:26;;:13;:26;;;2455:33;;2217:278;;;;;;:::o;1563:176::-;259:5:101;;;;;;;;;;;245:19;;:10;:19;;;224:85;;;;;;;;;;;;;;;;;;;;;;;;1722:10:18;1698:13;:21;1712:6;1698:21;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;1563:176;;:::o;333:167:101:-;259:5;;;;;;;;;;;245:19;;:10;:19;;;224:85;;;;;;;;;;;;;;;;;;;;;;;;449:1;429:22;;:8;:22;;;;425:69;;;475:8;467:5;;:16;;;;;;;;;;;;;;;;;;425:69;333:167;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;130:112;;194:43;229:6;216:20;194:43;;;185:52;;179:63;;;;;249:118;;316:46;354:6;341:20;316:46;;;307:55;;301:66;;;;;388:335;;;502:3;495:4;487:6;483:17;479:27;472:35;469:2;;;520:1;517;510:12;469:2;553:6;540:20;530:30;;580:18;572:6;569:30;566:2;;;612:1;609;602:12;566:2;646:4;638:6;634:17;622:29;;696:3;689;681:6;677:16;667:8;663:31;660:40;657:2;;;713:1;710;703:12;657:2;462:261;;;;;;732:432;;829:3;822:4;814:6;810:17;806:27;799:35;796:2;;;847:1;844;837:12;796:2;884:6;871:20;906:60;921:44;958:6;921:44;;;906:60;;;897:69;;986:6;979:5;972:21;1022:4;1014:6;1010:17;1055:4;1048:5;1044:16;1090:3;1081:6;1076:3;1072:16;1069:25;1066:2;;;1107:1;1104;1097:12;1066:2;1117:41;1151:6;1146:3;1141;1117:41;;;789:375;;;;;;;;1173:440;;1274:3;1267:4;1259:6;1255:17;1251:27;1244:35;1241:2;;;1292:1;1289;1282:12;1241:2;1329:6;1316:20;1351:64;1366:48;1407:6;1366:48;;;1351:64;;;1342:73;;1435:6;1428:5;1421:21;1471:4;1463:6;1459:17;1504:4;1497:5;1493:16;1539:3;1530:6;1525:3;1521:16;1518:25;1515:2;;;1556:1;1553;1546:12;1515:2;1566:41;1600:6;1595:3;1590;1566:41;;;1234:379;;;;;;;;1649:2210;;1762:5;1750:9;1745:3;1741:19;1737:31;1734:2;;;1781:1;1778;1771:12;1734:2;1799:21;1814:5;1799:21;;;1790:30;;1878:1;1909:49;1954:3;1945:6;1934:9;1930:22;1909:49;;;1903:3;1896:5;1892:15;1885:74;1830:140;2028:2;2061:49;2106:3;2097:6;2086:9;2082:22;2061:49;;;2054:4;2047:5;2043:16;2036:75;1980:142;2187:2;2220:49;2265:3;2256:6;2245:9;2241:22;2220:49;;;2213:4;2206:5;2202:16;2195:75;2132:149;2340:2;2373:49;2418:3;2409:6;2398:9;2394:22;2373:49;;;2366:4;2359:5;2355:16;2348:75;2291:143;2496:3;2530:49;2575:3;2566:6;2555:9;2551:22;2530:49;;;2523:4;2516:5;2512:16;2505:75;2444:147;2653:3;2687:49;2732:3;2723:6;2712:9;2708:22;2687:49;;;2680:4;2673:5;2669:16;2662:75;2601:147;2802:3;2836:49;2881:3;2872:6;2861:9;2857:22;2836:49;;;2829:4;2822:5;2818:16;2811:75;2758:139;2951:3;2985:49;3030:3;3021:6;3010:9;3006:22;2985:49;;;2978:4;2971:5;2967:16;2960:75;2907:139;3113:3;3148:49;3193:3;3184:6;3173:9;3169:22;3148:49;;;3140:5;3133;3129:17;3122:76;3056:153;3259:3;3294:49;3339:3;3330:6;3319:9;3315:22;3294:49;;;3286:5;3279;3275:17;3268:76;3219:136;3443:3;3432:9;3428:19;3415:33;3468:18;3460:6;3457:30;3454:2;;;3500:1;3497;3490:12;3454:2;3536:54;3586:3;3577:6;3566:9;3562:22;3536:54;;;3528:5;3521;3517:17;3510:81;3365:237;3690:3;3679:9;3675:19;3662:33;3715:18;3707:6;3704:30;3701:2;;;3747:1;3744;3737:12;3701:2;3783:54;3833:3;3824:6;3813:9;3809:22;3783:54;;;3775:5;3768;3764:17;3757:81;3612:237;1728:2131;;;;;3866:118;;3933:46;3971:6;3958:20;3933:46;;;3924:55;;3918:66;;;;;3991:241;;4095:2;4083:9;4074:7;4070:23;4066:32;4063:2;;;4111:1;4108;4101:12;4063:2;4146:1;4163:53;4208:7;4199:6;4188:9;4184:22;4163:53;;;4153:63;;4125:97;4057:175;;;;;4239:360;;;4357:2;4345:9;4336:7;4332:23;4328:32;4325:2;;;4373:1;4370;4363:12;4325:2;4408:1;4425:53;4470:7;4461:6;4450:9;4446:22;4425:53;;;4415:63;;4387:97;4515:2;4533:50;4575:7;4566:6;4555:9;4551:22;4533:50;;;4523:60;;4494:95;4319:280;;;;;;4606:615;;;;;4763:2;4751:9;4742:7;4738:23;4734:32;4731:2;;;4779:1;4776;4769:12;4731:2;4814:1;4831:53;4876:7;4867:6;4856:9;4852:22;4831:53;;;4821:63;;4793:97;4921:2;4939:53;4984:7;4975:6;4964:9;4960:22;4939:53;;;4929:63;;4900:98;5057:2;5046:9;5042:18;5029:32;5081:18;5073:6;5070:30;5067:2;;;5113:1;5110;5103:12;5067:2;5141:64;5197:7;5188:6;5177:9;5173:22;5141:64;;;5123:82;;;;5008:203;4725:496;;;;;;;;5228:855;;;;;5416:3;5404:9;5395:7;5391:23;5387:33;5384:2;;;5433:1;5430;5423:12;5384:2;5496:1;5485:9;5481:17;5468:31;5519:18;5511:6;5508:30;5505:2;;;5551:1;5548;5541:12;5505:2;5571:77;5640:7;5631:6;5620:9;5616:22;5571:77;;;5561:87;;5447:207;5685:2;5703:53;5748:7;5739:6;5728:9;5724:22;5703:53;;;5693:63;;5664:98;5793:2;5811:53;5856:7;5847:6;5836:9;5832:22;5811:53;;;5801:63;;5772:98;5929:2;5918:9;5914:18;5901:32;5953:18;5945:6;5942:30;5939:2;;;5985:1;5982;5975:12;5939:2;6005:62;6059:7;6050:6;6039:9;6035:22;6005:62;;;5995:72;;5880:193;5378:705;;;;;;;;6090:110;6163:31;6188:5;6163:31;;;6158:3;6151:44;6145:55;;;6207:101;6274:28;6296:5;6274:28;;;6269:3;6262:41;6256:52;;;6315:297;;6415:38;6447:5;6415:38;;;6470:6;6465:3;6458:19;6482:63;6538:6;6531:4;6526:3;6522:14;6515:4;6508:5;6504:16;6482:63;;;6577:29;6599:6;6577:29;;;6570:4;6565:3;6561:14;6557:50;6550:57;;6395:217;;;;;;6619:289;;6715:34;6743:5;6715:34;;;6766:6;6761:3;6754:19;6778:63;6834:6;6827:4;6822:3;6818:14;6811:4;6804:5;6800:16;6778:63;;;6873:29;6895:6;6873:29;;;6866:4;6861:3;6857:14;6853:50;6846:57;;6695:213;;;;;;6938:731;;7045:5;7039:12;7079:1;7068:9;7064:17;7092:1;7087:200;;;;7298:1;7293:370;;;;7057:606;;7087:200;7165:4;7161:1;7150:9;7146:17;7142:28;7189:6;7184:3;7177:19;7245:4;7241:9;7230;7226:25;7219:4;7214:3;7210:14;7203:49;7275:4;7270:3;7266:14;7259:21;;7094:193;7087:200;;7293:370;7362:1;7351:9;7347:17;7383:6;7378:3;7371:19;7413:4;7408:3;7404:14;7397:21;;7440:37;7471:5;7440:37;;;7493:1;7501:130;7515:6;7512:1;7509:13;7501:130;;;7580:7;7574:14;7570:1;7565:3;7561:11;7554:35;7621:1;7612:7;7608:15;7597:26;;7537:4;7534:1;7530:12;7525:17;;7501:130;;;7654:1;7649:3;7645:11;7638:18;;7300:363;;;7057:606;;7015:654;;;;;;7678:296;;7833:2;7828:3;7821:15;7870:66;7865:2;7860:3;7856:12;7849:88;7965:2;7960:3;7956:12;7949:19;;7814:160;;;;7983:296;;8138:2;8133:3;8126:15;8175:66;8170:2;8165:3;8161:12;8154:88;8270:2;8265:3;8261:12;8254:19;;8119:160;;;;8288:296;;8443:2;8438:3;8431:15;8480:66;8475:2;8470:3;8466:12;8459:88;8575:2;8570:3;8566:12;8559:19;;8424:160;;;;8593:296;;8748:2;8743:3;8736:15;8785:66;8780:2;8775:3;8771:12;8764:88;8880:2;8875:3;8871:12;8864:19;;8729:160;;;;8950:2421;;9089:5;9084:3;9080:15;9184:3;9177:5;9173:15;9167:22;9201:61;9257:3;9252;9248:13;9235:11;9201:61;;;9110:164;9358:4;9351:5;9347:16;9341:23;9376:62;9432:4;9427:3;9423:14;9410:11;9376:62;;;9284:166;9541:4;9534:5;9530:16;9524:23;9559:62;9615:4;9610:3;9606:14;9593:11;9559:62;;;9460:173;9718:4;9711:5;9707:16;9701:23;9736:62;9792:4;9787:3;9783:14;9770:11;9736:62;;;9643:167;9898:4;9891:5;9887:16;9881:23;9916:62;9972:4;9967:3;9963:14;9950:11;9916:62;;;9820:170;10078:4;10071:5;10067:16;10061:23;10096:62;10152:4;10147:3;10143:14;10130:11;10096:62;;;10000:170;10250:4;10243:5;10239:16;10233:23;10268:62;10324:4;10319:3;10315:14;10302:11;10268:62;;;10180:162;10422:4;10415:5;10411:16;10405:23;10440:62;10496:4;10491:3;10487:14;10474:11;10440:62;;;10352:162;10607:5;10600;10596:17;10590:24;10626:63;10682:5;10677:3;10673:15;10660:11;10626:63;;;10524:177;10777:5;10770;10766:17;10760:24;10796:63;10852:5;10847:3;10843:15;10830:11;10796:63;;;10711:160;10957:5;10950;10946:17;10940:24;11010:3;11004:4;11000:14;10992:5;10987:3;10983:15;10976:39;11030:66;11091:4;11078:11;11030:66;;;11022:74;;10881:227;11194:5;11187;11183:17;11177:24;11247:3;11241:4;11237:14;11229:5;11224:3;11220:15;11213:39;11267:66;11328:4;11315:11;11267:66;;;11259:74;;11118:227;11362:4;11355:11;;9062:2309;;;;;;11378:110;11451:31;11476:5;11451:31;;;11446:3;11439:44;11433:55;;;11495:193;;11603:2;11592:9;11588:18;11580:26;;11617:61;11675:1;11664:9;11660:17;11651:6;11617:61;;;11574:114;;;;;11695:181;;11797:2;11786:9;11782:18;11774:26;;11811:55;11863:1;11852:9;11848:17;11839:6;11811:55;;;11768:108;;;;;11883:387;;12064:2;12053:9;12049:18;12041:26;;12114:9;12108:4;12104:20;12100:1;12089:9;12085:17;12078:47;12139:121;12255:4;12139:121;;;12131:129;;12035:235;;;;12277:387;;12458:2;12447:9;12443:18;12435:26;;12508:9;12502:4;12498:20;12494:1;12483:9;12479:17;12472:47;12533:121;12649:4;12533:121;;;12525:129;;12429:235;;;;12671:387;;12852:2;12841:9;12837:18;12829:26;;12902:9;12896:4;12892:20;12888:1;12877:9;12873:17;12866:47;12927:121;13043:4;12927:121;;;12919:129;;12823:235;;;;13065:387;;13246:2;13235:9;13231:18;13223:26;;13296:9;13290:4;13286:20;13282:1;13271:9;13267:17;13260:47;13321:121;13437:4;13321:121;;;13313:129;;13217:235;;;;13459:623;;13689:2;13678:9;13674:18;13666:26;;13739:9;13733:4;13729:20;13725:1;13714:9;13710:17;13703:47;13764:96;13855:4;13846:6;13764:96;;;13756:104;;13871:62;13929:2;13918:9;13914:18;13905:6;13871:62;;;13981:9;13975:4;13971:20;13966:2;13955:9;13951:18;13944:48;14006:66;14067:4;14058:6;14006:66;;;13998:74;;13660:422;;;;;;;14089:659;;14314:3;14303:9;14299:19;14291:27;;14329:61;14387:1;14376:9;14372:17;14363:6;14329:61;;;14401:62;14459:2;14448:9;14444:18;14435:6;14401:62;;;14511:9;14505:4;14501:20;14496:2;14485:9;14481:18;14474:48;14536:66;14597:4;14588:6;14536:66;;;14528:74;;14650:9;14644:4;14640:20;14635:2;14624:9;14620:18;14613:48;14675:63;14733:4;14724:6;14675:63;;;14667:71;;14285:463;;;;;;;;14755:256;;14817:2;14811:9;14801:19;;14855:4;14847:6;14843:17;14954:6;14942:10;14939:22;14918:18;14906:10;14903:34;14900:62;14897:2;;;14975:1;14972;14965:12;14897:2;14995:10;14991:2;14984:22;14795:216;;;;;15018:254;;15157:18;15149:6;15146:30;15143:2;;;15189:1;15186;15179:12;15143:2;15233:4;15229:9;15222:4;15214:6;15210:17;15206:33;15198:41;;15262:4;15256;15252:15;15244:23;;15080:192;;;;15279:258;;15422:18;15414:6;15411:30;15408:2;;;15454:1;15451;15444:12;15408:2;15498:4;15494:9;15487:4;15479:6;15475:17;15471:33;15463:41;;15527:4;15521;15517:15;15509:23;;15345:192;;;;15546:125;;15622:4;15619:1;15612:15;15659:4;15656:1;15646:18;15634:30;;15604:67;;;;15680:87;;15756:5;15750:12;15740:22;;15734:33;;;;15774:91;;15854:5;15848:12;15838:22;;15832:33;;;;15872:128;;15952:42;15945:5;15941:54;15930:65;;15924:76;;;;16007:92;;16087:5;16080:13;16073:21;16062:32;;16056:43;;;;16106:79;;16175:5;16164:16;;16158:27;;;;16192:128;;16272:42;16265:5;16261:54;16250:65;;16244:76;;;;16327:92;;16407:5;16400:13;16393:21;16382:32;;16376:43;;;;16426:79;;16495:5;16484:16;;16478:27;;;;16512:79;;16581:5;16570:16;;16564:27;;;;16599:145;16680:6;16675:3;16670;16657:30;16736:1;16727:6;16722:3;16718:16;16711:27;16650:94;;;;16753:268;16818:1;16825:101;16839:6;16836:1;16833:13;16825:101;;;16915:1;16910:3;16906:11;16900:18;16896:1;16891:3;16887:11;16880:39;16861:2;16858:1;16854:10;16849:15;;16825:101;;;16941:6;16938:1;16935:13;16932:2;;;17006:1;16997:6;16992:3;16988:16;16981:27;16932:2;16802:219;;;;;17029:97;;17117:2;17113:7;17108:2;17101:5;17097:14;17093:28;17083:38;;17077:49;;;",
  "source": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity 0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"../../protocol/Exchange/interfaces/IExchange.sol\";\nimport \"../../protocol/Exchange/libs/LibOrder.sol\";\nimport \"../../utils/Ownable/Ownable.sol\";\n\n\ncontract Whitelist is\n    Ownable\n{\n\n    // Mapping of address => whitelist status.\n    mapping (address => bool) public isWhitelisted;\n\n    // Exchange contract.\n    // solhint-disable var-name-mixedcase\n    IExchange internal EXCHANGE;\n    bytes internal TX_ORIGIN_SIGNATURE;\n    // solhint-enable var-name-mixedcase\n\n    byte constant internal VALIDATOR_SIGNATURE_BYTE = \"\\x05\";\n\n    constructor (address _exchange)\n        public\n    {\n        EXCHANGE = IExchange(_exchange);\n        TX_ORIGIN_SIGNATURE = abi.encodePacked(address(this), VALIDATOR_SIGNATURE_BYTE);\n    }\n\n    /// @dev Adds or removes an address from the whitelist.\n    /// @param target Address to add or remove from whitelist.\n    /// @param isApproved Whitelist status to assign to address.\n    function updateWhitelistStatus(\n        address target,\n        bool isApproved\n    )\n        external\n        onlyOwner\n    {\n        isWhitelisted[target] = isApproved;\n    }\n\n    /// @dev Verifies signer is same as signer of current Ethereum transaction.\n    ///      NOTE: This function can currently be used to validate signatures coming from outside of this contract.\n    ///      Extra safety checks can be added for a production contract.\n    /// @param signerAddress Address that should have signed the given hash.\n    /// @param signature Proof of signing.\n    /// @return Validity of order signature.\n    // solhint-disable no-unused-vars\n    function isValidSignature(\n        bytes32 hash,\n        address signerAddress,\n        bytes signature\n    )\n        external\n        view\n        returns (bool isValid)\n    {\n        // solhint-disable-next-line avoid-tx-origin\n        return signerAddress == tx.origin;\n    }\n    // solhint-enable no-unused-vars\n\n    /// @dev Fills an order using `msg.sender` as the taker.\n    ///      The transaction will revert if both the maker and taker are not whitelisted.\n    ///      Orders should specify this contract as the `senderAddress` in order to gaurantee\n    ///      that both maker and taker have been whitelisted.\n    /// @param order Order struct containing order specifications.\n    /// @param takerAssetFillAmount Desired amount of takerAsset to sell.\n    /// @param salt Arbitrary value to gaurantee uniqueness of 0x transaction hash.\n    /// @param orderSignature Proof that order has been created by maker.\n    function fillOrderIfWhitelisted(\n        LibOrder.Order memory order,\n        uint256 takerAssetFillAmount,\n        uint256 salt,\n        bytes memory orderSignature\n    )\n        public\n    {\n        address takerAddress = msg.sender;\n\n        // This contract must be the entry point for the transaction.\n        require(\n            // solhint-disable-next-line avoid-tx-origin\n            takerAddress == tx.origin,\n            \"INVALID_SENDER\"\n        );\n\n        // Check if maker is on the whitelist.\n        require(\n            isWhitelisted[order.makerAddress],\n            \"MAKER_NOT_WHITELISTED\"\n        );\n\n        // Check if taker is on the whitelist.\n        require(\n            isWhitelisted[takerAddress],\n            \"TAKER_NOT_WHITELISTED\"\n        );\n\n        // Encode arguments into byte array.\n        bytes memory data = abi.encodeWithSelector(\n            EXCHANGE.fillOrder.selector,\n            order,\n            takerAssetFillAmount,\n            orderSignature\n        );\n\n        // Call `fillOrder` via `executeTransaction`.\n        EXCHANGE.executeTransaction(\n            salt,\n            takerAddress,\n            data,\n            TX_ORIGIN_SIGNATURE\n        );\n    }\n}\n",
  "sourcePath": "/Users/facu/Documents/Laburo/Spiking/Ethereum/0x/0x-monorepo/packages/contracts/contracts/2.0.0/examples/Whitelist/Whitelist.sol",
  "ast": {
    "absolutePath": "/Users/facu/Documents/Laburo/Spiking/Ethereum/0x/0x-monorepo/packages/contracts/contracts/2.0.0/examples/Whitelist/Whitelist.sol",
    "exportedSymbols": {
      "Whitelist": [
        5194
      ]
    },
    "id": 5195,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5060,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:23:18"
      },
      {
        "id": 5061,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "604:33:18"
      },
      {
        "absolutePath": "/Users/facu/Documents/Laburo/Spiking/Ethereum/0x/0x-monorepo/packages/contracts/contracts/2.0.0/protocol/Exchange/interfaces/IExchange.sol",
        "file": "../../protocol/Exchange/interfaces/IExchange.sol",
        "id": 5062,
        "nodeType": "ImportDirective",
        "scope": 5195,
        "sourceUnit": 11527,
        "src": "639:58:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/facu/Documents/Laburo/Spiking/Ethereum/0x/0x-monorepo/packages/contracts/contracts/2.0.0/protocol/Exchange/libs/LibOrder.sol",
        "file": "../../protocol/Exchange/libs/LibOrder.sol",
        "id": 5063,
        "nodeType": "ImportDirective",
        "scope": 5195,
        "sourceUnit": 12434,
        "src": "698:51:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/facu/Documents/Laburo/Spiking/Ethereum/0x/0x-monorepo/packages/contracts/contracts/2.0.0/utils/Ownable/Ownable.sol",
        "file": "../../utils/Ownable/Ownable.sol",
        "id": 5064,
        "nodeType": "ImportDirective",
        "scope": 5195,
        "sourceUnit": 16365,
        "src": "750:41:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5065,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16364,
              "src": "820:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$16364",
                "typeString": "contract Ownable"
              }
            },
            "id": 5066,
            "nodeType": "InheritanceSpecifier",
            "src": "820:7:18"
          }
        ],
        "contractDependencies": [
          16316,
          16364
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5194,
        "linearizedBaseContracts": [
          5194,
          16364,
          16316
        ],
        "name": "Whitelist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5070,
            "name": "isWhitelisted",
            "nodeType": "VariableDeclaration",
            "scope": 5194,
            "src": "882:46:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 5069,
              "keyType": {
                "id": 5067,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "891:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "882:25:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 5068,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "902:4:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 5072,
            "name": "EXCHANGE",
            "nodeType": "VariableDeclaration",
            "scope": 5194,
            "src": "1003:27:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IExchange_$11526",
              "typeString": "contract IExchange"
            },
            "typeName": {
              "contractScope": null,
              "id": 5071,
              "name": "IExchange",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11526,
              "src": "1003:9:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IExchange_$11526",
                "typeString": "contract IExchange"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5074,
            "name": "TX_ORIGIN_SIGNATURE",
            "nodeType": "VariableDeclaration",
            "scope": 5194,
            "src": "1036:34:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 5073,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1036:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 5077,
            "name": "VALIDATOR_SIGNATURE_BYTE",
            "nodeType": "VariableDeclaration",
            "scope": 5194,
            "src": "1118:56:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes1",
              "typeString": "bytes1"
            },
            "typeName": {
              "id": 5075,
              "name": "byte",
              "nodeType": "ElementaryTypeName",
              "src": "1118:4:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes1",
                "typeString": "bytes1"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "05",
              "id": 5076,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1168:6:18",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_dbb8d0f4c497851a5043c6363657698cb1387682cac2f786c731f8936109d795",
                "typeString": "literal_string \"\u0005\""
              },
              "value": "\u0005"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5098,
              "nodeType": "Block",
              "src": "1232:137:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5082,
                      "name": "EXCHANGE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5072,
                      "src": "1242:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$11526",
                        "typeString": "contract IExchange"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5084,
                          "name": "_exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5079,
                          "src": "1263:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5083,
                        "name": "IExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11526,
                        "src": "1253:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IExchange_$11526_$",
                          "typeString": "type(contract IExchange)"
                        }
                      },
                      "id": 5085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1253:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$11526",
                        "typeString": "contract IExchange"
                      }
                    },
                    "src": "1242:31:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IExchange_$11526",
                      "typeString": "contract IExchange"
                    }
                  },
                  "id": 5087,
                  "nodeType": "ExpressionStatement",
                  "src": "1242:31:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5088,
                      "name": "TX_ORIGIN_SIGNATURE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5074,
                      "src": "1283:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5092,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16715,
                              "src": "1330:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Whitelist_$5194",
                                "typeString": "contract Whitelist"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Whitelist_$5194",
                                "typeString": "contract Whitelist"
                              }
                            ],
                            "id": 5091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1322:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 5093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1322:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 5094,
                          "name": "VALIDATOR_SIGNATURE_BYTE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5077,
                          "src": "1337:24:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 5089,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16615,
                          "src": "1305:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 5090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodePacked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1305:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 5095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1305:57:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1283:79:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 5097,
                  "nodeType": "ExpressionStatement",
                  "src": "1283:79:18"
                }
              ]
            },
            "documentation": null,
            "id": 5099,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5079,
                  "name": "_exchange",
                  "nodeType": "VariableDeclaration",
                  "scope": 5099,
                  "src": "1194:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1193:19:18"
            },
            "payable": false,
            "returnParameters": {
              "id": 5081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1232:0:18"
            },
            "scope": 5194,
            "src": "1181:188:18",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5114,
              "nodeType": "Block",
              "src": "1688:51:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5108,
                        "name": "isWhitelisted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5070,
                        "src": "1698:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5110,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5109,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5101,
                        "src": "1712:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1698:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5111,
                      "name": "isApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5103,
                      "src": "1722:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1698:34:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5113,
                  "nodeType": "ExpressionStatement",
                  "src": "1698:34:18"
                }
              ]
            },
            "documentation": "@dev Adds or removes an address from the whitelist.\n @param target Address to add or remove from whitelist.\n @param isApproved Whitelist status to assign to address.",
            "id": 5115,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 5106,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5105,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16344,
                  "src": "1674:9:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1674:9:18"
              }
            ],
            "name": "updateWhitelistStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5101,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 5115,
                  "src": "1603:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1603:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5103,
                  "name": "isApproved",
                  "nodeType": "VariableDeclaration",
                  "scope": 5115,
                  "src": "1627:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5102,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1627:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1593:55:18"
            },
            "payable": false,
            "returnParameters": {
              "id": 5107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1688:0:18"
            },
            "scope": 5194,
            "src": "1563:176:18",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5131,
              "nodeType": "Block",
              "src": "2392:103:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5126,
                      "name": "signerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5119,
                      "src": "2462:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5127,
                        "name": "tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16640,
                        "src": "2479:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_transaction",
                          "typeString": "tx"
                        }
                      },
                      "id": 5128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "origin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2479:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2462:26:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5125,
                  "id": 5130,
                  "nodeType": "Return",
                  "src": "2455:33:18"
                }
              ]
            },
            "documentation": "@dev Verifies signer is same as signer of current Ethereum transaction.\n      NOTE: This function can currently be used to validate signatures coming from outside of this contract.\n      Extra safety checks can be added for a production contract.\n @param signerAddress Address that should have signed the given hash.\n @param signature Proof of signing.\n @return Validity of order signature.",
            "id": 5132,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isValidSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5117,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5132,
                  "src": "2252:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5116,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2252:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5119,
                  "name": "signerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5132,
                  "src": "2274:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2274:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5121,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 5132,
                  "src": "2305:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5120,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2305:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2242:84:18"
            },
            "payable": false,
            "returnParameters": {
              "id": 5125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5124,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 5132,
                  "src": "2374:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5123,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2374:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2373:14:18"
            },
            "scope": 5194,
            "src": "2217:278:18",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5192,
              "nodeType": "Block",
              "src": "3335:1013:18",
              "statements": [
                {
                  "assignments": [
                    5144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5144,
                      "name": "takerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 5193,
                      "src": "3345:20:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5143,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3345:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5147,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 5145,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16628,
                      "src": "3368:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 5146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3368:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3345:33:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5149,
                          "name": "takerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5144,
                          "src": "3537:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5150,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16640,
                            "src": "3553:2:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 5151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3553:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3537:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e56414c49445f53454e444552",
                        "id": 5153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3576:16:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db738cfea6a49ef4e8f6a59c278add0dfddfdb2462adac18e44f8df0bef7fd64",
                          "typeString": "literal_string \"INVALID_SENDER\""
                        },
                        "value": "INVALID_SENDER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db738cfea6a49ef4e8f6a59c278add0dfddfdb2462adac18e44f8df0bef7fd64",
                          "typeString": "literal_string \"INVALID_SENDER\""
                        }
                      ],
                      "id": 5148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16631,
                        16632
                      ],
                      "referencedDeclaration": 16632,
                      "src": "3459:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3459:143:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5155,
                  "nodeType": "ExpressionStatement",
                  "src": "3459:143:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5157,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5070,
                          "src": "3681:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 5160,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5158,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5134,
                            "src": "3695:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$12378_memory_ptr",
                              "typeString": "struct LibOrder.Order memory"
                            }
                          },
                          "id": 5159,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "makerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12355,
                          "src": "3695:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3681:33:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d414b45525f4e4f545f57484954454c4953544544",
                        "id": 5161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3728:23:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc67f401fb3a00b1861b75ee8b8e8253069a92db113d75c1e882562da60c320f",
                          "typeString": "literal_string \"MAKER_NOT_WHITELISTED\""
                        },
                        "value": "MAKER_NOT_WHITELISTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc67f401fb3a00b1861b75ee8b8e8253069a92db113d75c1e882562da60c320f",
                          "typeString": "literal_string \"MAKER_NOT_WHITELISTED\""
                        }
                      ],
                      "id": 5156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16631,
                        16632
                      ],
                      "referencedDeclaration": 16632,
                      "src": "3660:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3660:101:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5163,
                  "nodeType": "ExpressionStatement",
                  "src": "3660:101:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5165,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5070,
                          "src": "3840:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 5167,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5166,
                          "name": "takerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5144,
                          "src": "3854:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3840:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54414b45525f4e4f545f57484954454c4953544544",
                        "id": 5168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3881:23:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a6bdeefb5ffbf08bc3b31532993bd6096f9d4b7010a96f46cc14f3151941958",
                          "typeString": "literal_string \"TAKER_NOT_WHITELISTED\""
                        },
                        "value": "TAKER_NOT_WHITELISTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a6bdeefb5ffbf08bc3b31532993bd6096f9d4b7010a96f46cc14f3151941958",
                          "typeString": "literal_string \"TAKER_NOT_WHITELISTED\""
                        }
                      ],
                      "id": 5164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16631,
                        16632
                      ],
                      "referencedDeclaration": 16632,
                      "src": "3819:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3819:95:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5170,
                  "nodeType": "ExpressionStatement",
                  "src": "3819:95:18"
                },
                {
                  "assignments": [
                    5172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5172,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 5193,
                      "src": "3970:17:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 5171,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3970:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5182,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5175,
                            "name": "EXCHANGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5072,
                            "src": "4026:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IExchange_$11526",
                              "typeString": "contract IExchange"
                            }
                          },
                          "id": 5176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fillOrder",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11547,
                          "src": "4026:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Order_$12378_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_struct$_FillResults_$11984_memory_ptr_$",
                            "typeString": "function (struct LibOrder.Order memory,uint256,bytes memory) external returns (struct LibFillResults.FillResults memory)"
                          }
                        },
                        "id": 5177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4026:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5178,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5134,
                        "src": "4067:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$12378_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5179,
                        "name": "takerAssetFillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5136,
                        "src": "4086:20:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5180,
                        "name": "orderSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5140,
                        "src": "4120:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_struct$_Order_$12378_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5173,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16615,
                        "src": "3990:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 5174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3990:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 5181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3990:154:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3970:174:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5186,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5138,
                        "src": "4250:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5187,
                        "name": "takerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5144,
                        "src": "4268:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5188,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5172,
                        "src": "4294:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5189,
                        "name": "TX_ORIGIN_SIGNATURE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5074,
                        "src": "4312:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5183,
                        "name": "EXCHANGE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5072,
                        "src": "4209:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IExchange_$11526",
                          "typeString": "contract IExchange"
                        }
                      },
                      "id": 5185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeTransaction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11622,
                      "src": "4209:27:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,bytes memory) external"
                      }
                    },
                    "id": 5190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4209:132:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5191,
                  "nodeType": "ExpressionStatement",
                  "src": "4209:132:18"
                }
              ]
            },
            "documentation": "@dev Fills an order using `msg.sender` as the taker.\n      The transaction will revert if both the maker and taker are not whitelisted.\n      Orders should specify this contract as the `senderAddress` in order to gaurantee\n      that both maker and taker have been whitelisted.\n @param order Order struct containing order specifications.\n @param takerAssetFillAmount Desired amount of takerAsset to sell.\n @param salt Arbitrary value to gaurantee uniqueness of 0x transaction hash.\n @param orderSignature Proof that order has been created by maker.",
            "id": 5193,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "fillOrderIfWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5134,
                  "name": "order",
                  "nodeType": "VariableDeclaration",
                  "scope": 5193,
                  "src": "3185:27:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$12378_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5133,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12378,
                    "src": "3185:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$12378_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5136,
                  "name": "takerAssetFillAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5193,
                  "src": "3222:28:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3222:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5138,
                  "name": "salt",
                  "nodeType": "VariableDeclaration",
                  "scope": 5193,
                  "src": "3260:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3260:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5140,
                  "name": "orderSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 5193,
                  "src": "3282:27:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5139,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3282:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3175:140:18"
            },
            "payable": false,
            "returnParameters": {
              "id": 5142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3335:0:18"
            },
            "scope": 5194,
            "src": "3144:1204:18",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5195,
        "src": "794:3556:18"
      }
    ],
    "src": "580:3771:18"
  },
  "legacyAST": {
    "absolutePath": "/Users/facu/Documents/Laburo/Spiking/Ethereum/0x/0x-monorepo/packages/contracts/contracts/2.0.0/examples/Whitelist/Whitelist.sol",
    "exportedSymbols": {
      "Whitelist": [
        5194
      ]
    },
    "id": 5195,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5060,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:23:18"
      },
      {
        "id": 5061,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "604:33:18"
      },
      {
        "absolutePath": "/Users/facu/Documents/Laburo/Spiking/Ethereum/0x/0x-monorepo/packages/contracts/contracts/2.0.0/protocol/Exchange/interfaces/IExchange.sol",
        "file": "../../protocol/Exchange/interfaces/IExchange.sol",
        "id": 5062,
        "nodeType": "ImportDirective",
        "scope": 5195,
        "sourceUnit": 11527,
        "src": "639:58:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/facu/Documents/Laburo/Spiking/Ethereum/0x/0x-monorepo/packages/contracts/contracts/2.0.0/protocol/Exchange/libs/LibOrder.sol",
        "file": "../../protocol/Exchange/libs/LibOrder.sol",
        "id": 5063,
        "nodeType": "ImportDirective",
        "scope": 5195,
        "sourceUnit": 12434,
        "src": "698:51:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/facu/Documents/Laburo/Spiking/Ethereum/0x/0x-monorepo/packages/contracts/contracts/2.0.0/utils/Ownable/Ownable.sol",
        "file": "../../utils/Ownable/Ownable.sol",
        "id": 5064,
        "nodeType": "ImportDirective",
        "scope": 5195,
        "sourceUnit": 16365,
        "src": "750:41:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5065,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16364,
              "src": "820:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$16364",
                "typeString": "contract Ownable"
              }
            },
            "id": 5066,
            "nodeType": "InheritanceSpecifier",
            "src": "820:7:18"
          }
        ],
        "contractDependencies": [
          16316,
          16364
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5194,
        "linearizedBaseContracts": [
          5194,
          16364,
          16316
        ],
        "name": "Whitelist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5070,
            "name": "isWhitelisted",
            "nodeType": "VariableDeclaration",
            "scope": 5194,
            "src": "882:46:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 5069,
              "keyType": {
                "id": 5067,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "891:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "882:25:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 5068,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "902:4:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 5072,
            "name": "EXCHANGE",
            "nodeType": "VariableDeclaration",
            "scope": 5194,
            "src": "1003:27:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IExchange_$11526",
              "typeString": "contract IExchange"
            },
            "typeName": {
              "contractScope": null,
              "id": 5071,
              "name": "IExchange",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11526,
              "src": "1003:9:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IExchange_$11526",
                "typeString": "contract IExchange"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5074,
            "name": "TX_ORIGIN_SIGNATURE",
            "nodeType": "VariableDeclaration",
            "scope": 5194,
            "src": "1036:34:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 5073,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1036:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 5077,
            "name": "VALIDATOR_SIGNATURE_BYTE",
            "nodeType": "VariableDeclaration",
            "scope": 5194,
            "src": "1118:56:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes1",
              "typeString": "bytes1"
            },
            "typeName": {
              "id": 5075,
              "name": "byte",
              "nodeType": "ElementaryTypeName",
              "src": "1118:4:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes1",
                "typeString": "bytes1"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "05",
              "id": 5076,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1168:6:18",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_dbb8d0f4c497851a5043c6363657698cb1387682cac2f786c731f8936109d795",
                "typeString": "literal_string \"\u0005\""
              },
              "value": "\u0005"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5098,
              "nodeType": "Block",
              "src": "1232:137:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5082,
                      "name": "EXCHANGE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5072,
                      "src": "1242:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$11526",
                        "typeString": "contract IExchange"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5084,
                          "name": "_exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5079,
                          "src": "1263:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5083,
                        "name": "IExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11526,
                        "src": "1253:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IExchange_$11526_$",
                          "typeString": "type(contract IExchange)"
                        }
                      },
                      "id": 5085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1253:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$11526",
                        "typeString": "contract IExchange"
                      }
                    },
                    "src": "1242:31:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IExchange_$11526",
                      "typeString": "contract IExchange"
                    }
                  },
                  "id": 5087,
                  "nodeType": "ExpressionStatement",
                  "src": "1242:31:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5088,
                      "name": "TX_ORIGIN_SIGNATURE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5074,
                      "src": "1283:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5092,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16715,
                              "src": "1330:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Whitelist_$5194",
                                "typeString": "contract Whitelist"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Whitelist_$5194",
                                "typeString": "contract Whitelist"
                              }
                            ],
                            "id": 5091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1322:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 5093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1322:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 5094,
                          "name": "VALIDATOR_SIGNATURE_BYTE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5077,
                          "src": "1337:24:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 5089,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16615,
                          "src": "1305:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 5090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodePacked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1305:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 5095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1305:57:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1283:79:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 5097,
                  "nodeType": "ExpressionStatement",
                  "src": "1283:79:18"
                }
              ]
            },
            "documentation": null,
            "id": 5099,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5079,
                  "name": "_exchange",
                  "nodeType": "VariableDeclaration",
                  "scope": 5099,
                  "src": "1194:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1193:19:18"
            },
            "payable": false,
            "returnParameters": {
              "id": 5081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1232:0:18"
            },
            "scope": 5194,
            "src": "1181:188:18",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5114,
              "nodeType": "Block",
              "src": "1688:51:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5108,
                        "name": "isWhitelisted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5070,
                        "src": "1698:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5110,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5109,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5101,
                        "src": "1712:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1698:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5111,
                      "name": "isApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5103,
                      "src": "1722:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1698:34:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5113,
                  "nodeType": "ExpressionStatement",
                  "src": "1698:34:18"
                }
              ]
            },
            "documentation": "@dev Adds or removes an address from the whitelist.\n @param target Address to add or remove from whitelist.\n @param isApproved Whitelist status to assign to address.",
            "id": 5115,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 5106,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5105,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16344,
                  "src": "1674:9:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1674:9:18"
              }
            ],
            "name": "updateWhitelistStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5101,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 5115,
                  "src": "1603:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1603:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5103,
                  "name": "isApproved",
                  "nodeType": "VariableDeclaration",
                  "scope": 5115,
                  "src": "1627:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5102,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1627:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1593:55:18"
            },
            "payable": false,
            "returnParameters": {
              "id": 5107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1688:0:18"
            },
            "scope": 5194,
            "src": "1563:176:18",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5131,
              "nodeType": "Block",
              "src": "2392:103:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5126,
                      "name": "signerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5119,
                      "src": "2462:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5127,
                        "name": "tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16640,
                        "src": "2479:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_transaction",
                          "typeString": "tx"
                        }
                      },
                      "id": 5128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "origin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2479:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2462:26:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5125,
                  "id": 5130,
                  "nodeType": "Return",
                  "src": "2455:33:18"
                }
              ]
            },
            "documentation": "@dev Verifies signer is same as signer of current Ethereum transaction.\n      NOTE: This function can currently be used to validate signatures coming from outside of this contract.\n      Extra safety checks can be added for a production contract.\n @param signerAddress Address that should have signed the given hash.\n @param signature Proof of signing.\n @return Validity of order signature.",
            "id": 5132,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isValidSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5117,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5132,
                  "src": "2252:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5116,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2252:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5119,
                  "name": "signerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5132,
                  "src": "2274:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2274:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5121,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 5132,
                  "src": "2305:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5120,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2305:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2242:84:18"
            },
            "payable": false,
            "returnParameters": {
              "id": 5125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5124,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 5132,
                  "src": "2374:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5123,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2374:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2373:14:18"
            },
            "scope": 5194,
            "src": "2217:278:18",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5192,
              "nodeType": "Block",
              "src": "3335:1013:18",
              "statements": [
                {
                  "assignments": [
                    5144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5144,
                      "name": "takerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 5193,
                      "src": "3345:20:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5143,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3345:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5147,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 5145,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16628,
                      "src": "3368:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 5146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3368:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3345:33:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5149,
                          "name": "takerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5144,
                          "src": "3537:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5150,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16640,
                            "src": "3553:2:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 5151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3553:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3537:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e56414c49445f53454e444552",
                        "id": 5153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3576:16:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db738cfea6a49ef4e8f6a59c278add0dfddfdb2462adac18e44f8df0bef7fd64",
                          "typeString": "literal_string \"INVALID_SENDER\""
                        },
                        "value": "INVALID_SENDER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db738cfea6a49ef4e8f6a59c278add0dfddfdb2462adac18e44f8df0bef7fd64",
                          "typeString": "literal_string \"INVALID_SENDER\""
                        }
                      ],
                      "id": 5148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16631,
                        16632
                      ],
                      "referencedDeclaration": 16632,
                      "src": "3459:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3459:143:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5155,
                  "nodeType": "ExpressionStatement",
                  "src": "3459:143:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5157,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5070,
                          "src": "3681:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 5160,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5158,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5134,
                            "src": "3695:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$12378_memory_ptr",
                              "typeString": "struct LibOrder.Order memory"
                            }
                          },
                          "id": 5159,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "makerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12355,
                          "src": "3695:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3681:33:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d414b45525f4e4f545f57484954454c4953544544",
                        "id": 5161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3728:23:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc67f401fb3a00b1861b75ee8b8e8253069a92db113d75c1e882562da60c320f",
                          "typeString": "literal_string \"MAKER_NOT_WHITELISTED\""
                        },
                        "value": "MAKER_NOT_WHITELISTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc67f401fb3a00b1861b75ee8b8e8253069a92db113d75c1e882562da60c320f",
                          "typeString": "literal_string \"MAKER_NOT_WHITELISTED\""
                        }
                      ],
                      "id": 5156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16631,
                        16632
                      ],
                      "referencedDeclaration": 16632,
                      "src": "3660:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3660:101:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5163,
                  "nodeType": "ExpressionStatement",
                  "src": "3660:101:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5165,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5070,
                          "src": "3840:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 5167,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5166,
                          "name": "takerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5144,
                          "src": "3854:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3840:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54414b45525f4e4f545f57484954454c4953544544",
                        "id": 5168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3881:23:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a6bdeefb5ffbf08bc3b31532993bd6096f9d4b7010a96f46cc14f3151941958",
                          "typeString": "literal_string \"TAKER_NOT_WHITELISTED\""
                        },
                        "value": "TAKER_NOT_WHITELISTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a6bdeefb5ffbf08bc3b31532993bd6096f9d4b7010a96f46cc14f3151941958",
                          "typeString": "literal_string \"TAKER_NOT_WHITELISTED\""
                        }
                      ],
                      "id": 5164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16631,
                        16632
                      ],
                      "referencedDeclaration": 16632,
                      "src": "3819:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3819:95:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5170,
                  "nodeType": "ExpressionStatement",
                  "src": "3819:95:18"
                },
                {
                  "assignments": [
                    5172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5172,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 5193,
                      "src": "3970:17:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 5171,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3970:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5182,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5175,
                            "name": "EXCHANGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5072,
                            "src": "4026:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IExchange_$11526",
                              "typeString": "contract IExchange"
                            }
                          },
                          "id": 5176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fillOrder",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11547,
                          "src": "4026:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Order_$12378_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_struct$_FillResults_$11984_memory_ptr_$",
                            "typeString": "function (struct LibOrder.Order memory,uint256,bytes memory) external returns (struct LibFillResults.FillResults memory)"
                          }
                        },
                        "id": 5177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4026:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5178,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5134,
                        "src": "4067:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$12378_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5179,
                        "name": "takerAssetFillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5136,
                        "src": "4086:20:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5180,
                        "name": "orderSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5140,
                        "src": "4120:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_struct$_Order_$12378_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5173,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16615,
                        "src": "3990:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 5174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3990:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 5181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3990:154:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3970:174:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5186,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5138,
                        "src": "4250:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5187,
                        "name": "takerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5144,
                        "src": "4268:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5188,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5172,
                        "src": "4294:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5189,
                        "name": "TX_ORIGIN_SIGNATURE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5074,
                        "src": "4312:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5183,
                        "name": "EXCHANGE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5072,
                        "src": "4209:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IExchange_$11526",
                          "typeString": "contract IExchange"
                        }
                      },
                      "id": 5185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeTransaction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11622,
                      "src": "4209:27:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,bytes memory) external"
                      }
                    },
                    "id": 5190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4209:132:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5191,
                  "nodeType": "ExpressionStatement",
                  "src": "4209:132:18"
                }
              ]
            },
            "documentation": "@dev Fills an order using `msg.sender` as the taker.\n      The transaction will revert if both the maker and taker are not whitelisted.\n      Orders should specify this contract as the `senderAddress` in order to gaurantee\n      that both maker and taker have been whitelisted.\n @param order Order struct containing order specifications.\n @param takerAssetFillAmount Desired amount of takerAsset to sell.\n @param salt Arbitrary value to gaurantee uniqueness of 0x transaction hash.\n @param orderSignature Proof that order has been created by maker.",
            "id": 5193,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "fillOrderIfWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5134,
                  "name": "order",
                  "nodeType": "VariableDeclaration",
                  "scope": 5193,
                  "src": "3185:27:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$12378_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5133,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12378,
                    "src": "3185:14:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$12378_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5136,
                  "name": "takerAssetFillAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5193,
                  "src": "3222:28:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3222:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5138,
                  "name": "salt",
                  "nodeType": "VariableDeclaration",
                  "scope": 5193,
                  "src": "3260:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3260:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5140,
                  "name": "orderSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 5193,
                  "src": "3282:27:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5139,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3282:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3175:140:18"
            },
            "payable": false,
            "returnParameters": {
              "id": 5142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3335:0:18"
            },
            "scope": 5194,
            "src": "3144:1204:18",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5195,
        "src": "794:3556:18"
      }
    ],
    "src": "580:3771:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-16T20:38:35.295Z"
}